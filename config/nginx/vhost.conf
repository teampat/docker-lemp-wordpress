fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=microcache:10m max_size=512m inactive=60m;
client_max_body_size 16m;

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        access_log /var/log/nginx/access.log;
		error_log   /var/log/nginx/error.log;

        root /usr/share/nginx/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm;

        server_name domain.com www.domain.com;

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
			fastcgi_pass phpfpm:9000;
            fastcgi_cache microcache;
            fastcgi_cache_key $scheme$host$request_uri$request_method;
            fastcgi_cache_valid 200 301 302 30s;
            fastcgi_cache_use_stale updating error timeout invalid_header http_500;
			fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
			include        /etc/nginx/fastcgi_params;
        }

        # WP Super Cache rules.

        set $cache_uri $request_uri;

        # POST requests and urls with a query string should always go to PHP

	    if ($request_method = POST) {
            set $cache_uri 'null cache';
        }

        if ($query_string != "") {
            set $cache_uri 'null cache';
        }

    	if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php
                              |wp-.*.php|/feed/|index.php|wp-comments-popup.php
                              |wp-links-opml.php|wp-locations.php |sitemap(_index)?.xml
                              |[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
    		set $cache_uri 'null cache';
    	}

	    # Use cached or actual file if they exists, otherwise pass request to WordPress
        location / {
            try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php?$args;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
               deny all;
        }

}
